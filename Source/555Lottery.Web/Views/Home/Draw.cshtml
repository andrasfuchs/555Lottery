@model _555Lottery.Web.ViewModels.DrawViewModel[]
@{
    ViewBag.Title = "Details of draw";
}

<div class="logo-wrapper">
    <div id="biglogo">
        <a runat="server" href="~/">
            <img runat="server" src="~/Content/images/555_lottery_logo.png" alt="555 lottery" width="775" height="153" />
        </a>
    </div>
</div>
<div class="content-wrapper">
    <div class="header-wrapper">
        <div id="backtohome">
            <a runat="server" href="~/">
                <img runat="server" src="~/Content/images/btn_back_eng.png" alt="BACK" width="54" height="13" />
            </a>
        </div>
        <div id="utcclock">
            @DateTime.UtcNow.ToString("MMM.dd. HH:mm").ToUpper()
        </div>
    </div>
    <div class="margined-content">
        <h2>
            <img runat="server" src="~/Content/images/txt_draw_eng.png" alt="DRAW" width="101" height="16" /></h2>
        <h2>@Model[0].DrawCode</h2>

        <div class="statsline">
            <div class="drawcode">
                <span>@{ Html.RenderPartial("_BlueLabel", Model[0].DrawCode.Substring(3)); }</span>
                <br />
                <span>@Model[0].DeadlineUtc.ToString("MMM.dd. HH:mm").ToUpper()</span> (UTC)
            </div>
            <div class="lastdrawitems">
                @if (Model[0].WinningTicketSequence != null)
                {
                    Html.RenderPartial("_LastDrawNumbers", Model[0].WinningTicketSequence);
                }
                else
                {
                    Html.RenderPartial("_LastDrawNumbers", "Numbers are not drawn yet");
                }

            </div>
            <div>
                <div class="button buttonblue disabled">
                    <a href="~/check/<TicketLotCode>">
                        <img runat="server" src="~/Content/images/btn_check_eng_blue.png" alt="CHECK" width="100" height="25" />
                    </a>
                </div>
            </div>
        </div>
        <div class="tableblock">
            <div class="statsleft">
                <img runat="server" src="~/Content/images/txt_small_jackpot_eng.png" alt="JACKPOT" width="88" height="9" />
                <span>&#36;@String.Format(" {0:n0}", Model[0].JackpotUSD)</span><br />
                <span>&#8364;@String.Format(" {0:n0}", Model[0].JackpotEUR)</span><br />
                <span>&#3647;@String.Format(" {0:n0}", Model[0].JackpotBTC)</span>
            </div>

            <div class="statsmiddle">

                @if (!String.IsNullOrEmpty(Model[0].WinningTicketSequence) && !String.IsNullOrEmpty(Model[0].AmountInPools))
                {

                    decimal[] amountsInPools = Model[0].AmountInPools.Split(';').Select(r => Decimal.Parse(r)).ToArray();
                    int[] hits = Model[0].Hits.Split(';').Select(r => Int32.Parse(r)).ToArray();
                    decimal[] prizes = new decimal[12];

                    for (int i = 0; i < 12; i++)
                    {
                        if (hits[i] > 0)
                        {
                            prizes[i] = (amountsInPools[i] / hits[i]) * Model[0].JackpotUSDAtDeadline.Value;
                        }
                    }

                    <table>
                        <thead>
                            <tr>
                                <th>Combination</th>
                                <th>Hits</th>
                                <th>Prize</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>5+1</td>
                                <td>@hits[11]</td>
                                <td>@(prizes[11] == 0 ? "rollover" : prizes[11].ToString("$ 0.00"))</td>
                            </tr>
                            <tr>
                                <td>5+0</td>
                                <td>@hits[10]</td>
                                <td>---</td>
                            </tr>
                            <tr>
                                <td>4+1</td>
                                <td>@hits[9]</td>
                                <td>---</td>
                            </tr>
                            <tr>
                                <td>4+0</td>
                                <td>@hits[8]</td>
                                <td>---</td>
                            </tr>
                            <tr>
                                <td>3+1</td>
                                <td>@hits[7]</td>
                                <td>---</td>
                            </tr>
                            <tr>
                                <td>3+0</td>
                                <td>@hits[6]</td>
                                <td>---</td>
                            </tr>
                            <tr>
                                <td>2+1</td>
                                <td>@hits[5]</td>
                                <td>@(prizes[5] == 0 ? "---" : prizes[5].ToString("$ 0.00"))</td>
                            </tr>
                            <tr>
                                <td>2+0</td>
                                <td>@hits[4]</td>
                                <td>@(prizes[4] == 0 ? "---" : prizes[4].ToString("$ 0.00"))</td>
                            </tr>
                            <tr>
                                <td>1+1</td>
                                <td>@hits[3]</td>
                                <td>@(prizes[3] == 0 ? "---" : prizes[3].ToString("$ 0.00"))</td>
                            </tr>
                            <tr>
                                <td>1+0</td>
                                <td>@hits[2]</td>
                                <td>@(prizes[2] == 0 ? "---" : prizes[2].ToString("$ 0.00"))</td>
                            </tr>
                            <tr>
                                <td>0+1</td>
                                <td>@hits[1]</td>
                                <td>@(prizes[1] == 0 ? "---" : prizes[1].ToString("$ 0.00"))</td>
                            </tr>
                            <tr>
                                <td>0+0</td>
                                <td>@hits[0]</td>
                                <td>@(prizes[0] == 0 ? "---" : prizes[0].ToString("$ 0.00"))</td>
                            </tr>
                        </tbody>
                    </table>
                }
                else 
                {
                    <span>&nbsp;</span>
                }
            </div>
            <div class="statsright">
                <img runat="server" src="~/Content/images/txt_small_nonjackpot_eng.png" alt="NON-JACKPOT" width="136" height="9" />
                <span>&#36;@String.Format("{0:n0}", "0")</span><br />
                <img runat="server" src="~/Content/images/txt_small_secondchance_eng.png" alt="SECOND CHANCE" width="160" height="9" />
                <span>&#36;@String.Format("{0:n0}", "0")</span><br />
            </div>
        </div>
        @for (int i = 1; i < Model.Length; i++)
        {            
            <div class="statsline">
                <div class="drawcode">
                    <span>@{ Html.RenderPartial("_BlueLabel", Model[i].DrawCode.Substring(3)); }</span>
                    <br />
                    <span>@Model[i].DeadlineUtc.ToString("MMM.dd. HH:mm").ToUpper()</span> (UTC)
                </div>
                <div class="lastdrawitems">
                    @if (Model[i].WinningTicketSequence != null)
                    {
                        Html.RenderPartial("_LastDrawNumbers", Model[i].WinningTicketSequence);
                    }
                    else
                    {
                        Html.RenderPartial("_LastDrawNumbers", "Numbers are not drawn yet");
                    }
                </div>
                <div>
                    <div class="button buttonblue">
                        <a runat="server" href="~/draw/@Model[i].DrawCode">
                            <img runat="server" src="~/Content/images/btn_details_eng_blue.png" alt="DETAILS" width="100" height="25" />
                        </a>
                    </div>
                </div>
            </div>
        }


    </div>
</div>

