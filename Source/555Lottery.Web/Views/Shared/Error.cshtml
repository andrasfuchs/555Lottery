@model System.Web.Mvc.HandleErrorInfo

@{
    ViewBag.Title = "Error";
    _555Lottery.Service.LotteryService.Instance.LogException(@Model.Exception);
}
<div class="logo-wrapper">
    <div id="biglogo">
        <a runat="server" href="~/">
            <img runat="server" src="~/Content/images/555_lottery_logo.png" alt="555 lottery" width="775" height="153" />
        </a>
    </div>
</div>
<div class="content-wrapper">
    <hgroup class="title">
        <h1 class="error">Error</h1>
        <h2 class="error">An error occurred while processing your request.</h2>
    </hgroup>
        <h3 class="error">Message</h3>
        <p class="error">@Model.Exception.Message</p>
        @if (Model.Exception.InnerException != null)
        { 
            <p class="error">@Model.Exception.InnerException.Message</p>        
        }
        <h3 class="error">StackTrace</h3>
        <p class="error dontjusity">@Model.Exception.StackTrace</p>

       
        @{
            Microsoft.Win32.RegistryKey installed_versions = Microsoft.Win32.Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\NET Framework Setup\NDP");
            string[] versionSubKeys = installed_versions.GetSubKeyNames();
            List<string> versions = new List<string>();

            foreach (string versionSubKey in versionSubKeys)
            {
                Microsoft.Win32.RegistryKey vsk = installed_versions.OpenSubKey(versionSubKey);
                string version = vsk.GetValue("Version") as string;
                if (version == null)
                {
                    vsk = vsk.OpenSubKey("Client");
                    if (vsk != null)
                    { 
                        version = vsk.GetValue("Version") as string;
                    }
                }

                if (version != null) {
                    versions.Add(version);
                }
            }

            versions.Sort();
            
            //version names start with 'v', eg, 'v3.5' which needs to be trimmed off before conversion
            //double framework = Convert.ToDouble(version_names[version_names.Length - 1].Remove(0, 1), System.Globalization.CultureInfo.InvariantCulture);
            //int sp = Convert.ToInt32(installed_versions.OpenSubKey(version_names[version_names.Length - 1]).GetValue("SP", 0));
        }
        <h3 class="error">Server version information</h3>
        <p>@System.Environment.OSVersion.ToString()</p>
        <p>.NET Environment @System.Environment.Version.ToString()</p>
        <h4>Installed .NET Frameworks</h4>
        @foreach (string ver in versions)
        { 
            <p class="error">.NET Framework version @ver</p>
        }

</div>
